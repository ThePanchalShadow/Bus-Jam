{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "aMJb5rU_giLv0INkQysP9",
      "type": "rectangle",
      "x": 442.94140625,
      "y": 214.9609375,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a0",
      "roundness": {
        "type": 3
      },
      "seed": 865533220,
      "version": 85,
      "versionNonce": 933926940,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "WUrIFYXo1CmcvFjW6zQNy"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "WUrIFYXo1CmcvFjW6zQNy",
      "type": "text",
      "x": 515.3215179443359,
      "y": 250.490234375,
      "width": 169.39993286132812,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 1969748408,
      "version": 55,
      "versionNonce": 1660585124,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118036,
      "link": null,
      "locked": false,
      "text": "Bus Manager",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "aMJb5rU_giLv0INkQysP9",
      "originalText": "Bus Manager",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "VxAuWtIhoN46sGCg6TSM0",
      "type": "rectangle",
      "x": 1161.24609375,
      "y": 214.359375,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a11",
      "roundness": {
        "type": 3
      },
      "seed": 159627428,
      "version": 199,
      "versionNonce": 1610581924,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "jmDM4DaJnF_z3bz10psop",
          "type": "text"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "jmDM4DaJnF_z3bz10psop",
      "type": "text",
      "x": 1195.126220703125,
      "y": 249.888671875,
      "width": 246.39990234375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a12",
      "roundness": null,
      "seed": 1443465672,
      "version": 186,
      "versionNonce": 571101220,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118036,
      "link": null,
      "locked": false,
      "text": "Customer Manager",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "VxAuWtIhoN46sGCg6TSM0",
      "originalText": "Customer Manager",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "y_YcXYiBHFsXu3k5J3T6b",
      "type": "rectangle",
      "x": 1890.078125,
      "y": 214.6875,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a12V",
      "roundness": {
        "type": 3
      },
      "seed": 156042276,
      "version": 332,
      "versionNonce": 1197028508,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "W67G_6Oq2rZDqvEjtyQut",
          "type": "text"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "W67G_6Oq2rZDqvEjtyQut",
      "type": "text",
      "x": 1954.7582397460938,
      "y": 250.216796875,
      "width": 184.7999267578125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a13",
      "roundness": null,
      "seed": 2020886968,
      "version": 343,
      "versionNonce": 336898980,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118036,
      "link": null,
      "locked": false,
      "text": "CustomerGate",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "y_YcXYiBHFsXu3k5J3T6b",
      "originalText": "CustomerGate",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "8CAMqgpgLziLxirIZtiFk",
      "type": "rectangle",
      "x": 791.3046875,
      "y": 213.9609375,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a14",
      "roundness": {
        "type": 3
      },
      "seed": 1759567780,
      "version": 144,
      "versionNonce": 1568076580,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "R9BLqxCeGqnrMl3JOXv7W",
          "type": "text"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "R9BLqxCeGqnrMl3JOXv7W",
      "type": "text",
      "x": 925.2847747802734,
      "y": 249.490234375,
      "width": 46.199981689453125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a18",
      "roundness": null,
      "seed": 1866509496,
      "version": 116,
      "versionNonce": 457676580,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118036,
      "link": null,
      "locked": false,
      "text": "Bus",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "8CAMqgpgLziLxirIZtiFk",
      "originalText": "Bus",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "UBfEzo8OlwDrP87qPECzR",
      "type": "rectangle",
      "x": 78.67578125,
      "y": 215.84765625,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1G",
      "roundness": {
        "type": 3
      },
      "seed": 1886210852,
      "version": 210,
      "versionNonce": 268452124,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "fJiBlnvd9cOV5YPsm-tV2",
          "type": "text"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "fJiBlnvd9cOV5YPsm-tV2",
      "type": "text",
      "x": 143.35589599609375,
      "y": 251.376953125,
      "width": 184.7999267578125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1V",
      "roundness": null,
      "seed": 2125460664,
      "version": 183,
      "versionNonce": 605098660,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118037,
      "link": null,
      "locked": false,
      "text": "Game Manager",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "UBfEzo8OlwDrP87qPECzR",
      "originalText": "Game Manager",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "iSo1wQvhZoF4CNRPec6wz",
      "type": "rectangle",
      "x": -287.1328125,
      "y": 215.84765625,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1d",
      "roundness": {
        "type": 3
      },
      "seed": 845170340,
      "version": 587,
      "versionNonce": 1350639388,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ZuFjANYc8ex3rwTTFibUD",
          "type": "text"
        }
      ],
      "updated": 1736402388551,
      "link": null,
      "locked": false
    },
    {
      "id": "ZuFjANYc8ex3rwTTFibUD",
      "type": "text",
      "x": -199.3527069091797,
      "y": 251.376953125,
      "width": 138.59994506835938,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1l",
      "roundness": null,
      "seed": 1042885064,
      "version": 568,
      "versionNonce": 835115932,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402388551,
      "link": null,
      "locked": false,
      "text": "ColorType",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "iSo1wQvhZoF4CNRPec6wz",
      "originalText": "ColorType",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "fuuC7Fo_AOFJkKHRk0R9c",
      "type": "text",
      "x": 442.94140624999994,
      "y": 359.929688,
      "width": 314.16015675000006,
      "height": 725,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": {
        "type": 2
      },
      "seed": 1130877476,
      "version": 1130,
      "versionNonce": 1688028610,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736484196906,
      "link": null,
      "locked": false,
      "text": "- Variables\n    List of all Spawned\nBuses\n    Transform spawnPoint\n    Transform defaultTarget\n    Event NewBusArrived\n- Functions\n    FirstPositionAssign()\n\n    AssignPositions()\n    - calls bus moving\nforward for all\n\n    UpdatePositions(bus)\n    - calls bus going out of\nscreen for first bus\nif(busList count is less\nthen equal to 0)\ncall check win condition\nform game manager\n    - calls assign positions\n\n    RemoveBus(Bus bus)\n        - Remove bus from\nlist\n\n    GetCurrentBus()\n        - Return first bus\nin list",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    List of all Spawned Buses\n    Transform spawnPoint\n    Transform defaultTarget\n    Event NewBusArrived\n- Functions\n    FirstPositionAssign()\n\n    AssignPositions()\n    - calls bus moving forward for all\n\n    UpdatePositions(bus)\n    - calls bus going out of screen for first bus\nif(busList count is less then equal to 0)\ncall check win condition form game manager\n    - calls assign positions\n\n    RemoveBus(Bus bus)\n        - Remove bus from list\n\n    GetCurrentBus()\n        - Return first bus in list",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "jjZcfDNQ1I6ONVIFzNuZF",
      "type": "text",
      "x": 1160.8796543649064,
      "y": 359.9296876509247,
      "width": 314.1601559999999,
      "height": 1400,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3G",
      "roundness": {
        "type": 2
      },
      "seed": 1920069028,
      "version": 1569,
      "versionNonce": 1622073438,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485259656,
      "link": null,
      "locked": false,
      "text": "- Variables\n    List of all Spawned\nCustomers\n    List of spawned Gates\n    \n- Functions   \n\n    FirstPositionAssign()\n    - get reference from\ngameManger.gridManager.visib\nleGrids and save it in a\ntemp list\n    - now randomly assign\nall customer to grids and\nremove grid from temp list\nas we assign customer and\nalso change position of\ncustomer to grid's position\n    - call\nupdateCustomerPath()\n \n    UpdateCustomersPath()\n    -\nUpdateCustomersPathAsync();\n    \n\n    Task\nUpdateCustomersPathAsync()\n        -foreach (var\ncustomer in customers)\n        -await\ncustomer.UpdateReachability(\n);\n     \nRemoveCustomer(Customer\ncustomer)\n    - remove customer from\nlist\n    - call\nDisableCustomer(customer)   \n    - calls Calls Update\nCustomer Path\n\n    DisableCustomer(Customer\ncustomer)\n      -\ncustomer.obstacle.SetActive(\nfalse);\n    -\nif(customer.TryGetComponent(\nout AIPath aiPath))\naiPath.enabled = false;    \n-\nif(customer.TryGetComponent(\nout Seeker seeker))\nseeker.enabled = false;",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    List of all Spawned Customers\n    List of spawned Gates\n    \n- Functions   \n\n    FirstPositionAssign()\n    - get reference from gameManger.gridManager.visibleGrids and save it in a temp list\n    - now randomly assign all customer to grids and remove grid from temp list as we assign customer and also change position of customer to grid's position\n    - call updateCustomerPath()\n \n    UpdateCustomersPath()\n    -UpdateCustomersPathAsync();\n    \n\n    Task UpdateCustomersPathAsync()\n        -foreach (var customer in customers)\n        -await customer.UpdateReachability();\n     \nRemoveCustomer(Customer customer)\n    - remove customer from list\n    - call DisableCustomer(customer)       \n    - calls Calls Update Customer Path\n\n    DisableCustomer(Customer customer)\n      -customer.obstacle.SetActive(false);\n    -if(customer.TryGetComponent(out AIPath aiPath)) aiPath.enabled = false;    \n-if(customer.TryGetComponent(out Seeker seeker)) seeker.enabled = false;",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "C3xOkg_VWlurOAm4DogS2",
      "type": "text",
      "x": 1890.0781250000002,
      "y": 359.9296875,
      "width": 314.16015599999986,
      "height": 800,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3K",
      "roundness": {
        "type": 2
      },
      "seed": 11311396,
      "version": 1982,
      "versionNonce": 2081830684,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402622684,
      "link": null,
      "locked": false,
      "text": "- Variables\n    assignedCustomerList\n    Reference To Customer\nManager\n    Reference to the grid\nwhere this gate will\nspawnCustomer\n\n-Function\n    OnEnable() \n    subscribe checkSpace to\npositionUpdate event of\nCustomer Manager\n    \n    CheckSpace()\n    - check if the refereced\nspawnGrid is empty/available\nor not\n    -if it is available call\nadd customer\n\n    AddCustomer()\n    - Take first customer\nfrom list, remove from\ncurrent list and assign it\nto customer manager's\nspawned customer list\n    - call\ngateSpawnAnimation of\ncustomer\n\n    ",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    assignedCustomerList\n    Reference To Customer Manager\n    Reference to the grid where this gate will spawnCustomer\n\n-Function\n    OnEnable() \n    subscribe checkSpace to positionUpdate event of Customer Manager\n    \n    CheckSpace()\n    - check if the refereced spawnGrid is empty/available or not\n    -if it is available call add customer\n\n    AddCustomer()\n    - Take first customer from list, remove from current list and assign it to customer manager's spawned customer list\n    - call gateSpawnAnimation of customer\n\n    ",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "v85Vk6QzoUzL7abQ_hpuZ",
      "type": "text",
      "x": 791.304688,
      "y": 360.28080042065164,
      "width": 314.1601560000001,
      "height": 1275,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3V",
      "roundness": {
        "type": 2
      },
      "seed": 1501942948,
      "version": 2144,
      "versionNonce": 967576000,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736405301713,
      "link": null,
      "locked": false,
      "text": "- Variables\n    ColorType color\n    List of available Seats\n    Dictionary of <seat,\ncustomer>\n    Reference to busManager\n    CustomerAnimation\nTaskList\n\n- Functions\n    CustomerAssign(customer)\n    - Take a seat from\navailable and save that seat\nwith customer in dictionary \n    - if available seat\ncount is less then or equal\nto zero call RemoveThisBus()\n\nPlayCustomerAssignAnimation(\n)\n    -make the customer set\nDestination\n    - save animation in a\ntask list\n\n    OnTriggerEnter()\n    - trygetcomponent\ncustomer\n    - find customer in\ndisctiory and set scale to\nzero then assign to seat\nposition and scale up the\ncustomer \n    - also call\nRemoveThisCustomer(customer)\nof customer manager    \n\n    Remove This Bus()\n    - Call Remove bus of bus\nmanager \n    - call\nUpdatebusPosition()\n\n    UpdateBusPosition()\n    - wait for all customer\nanimation to complete in\nTaskList\n   \nBusMoving Forward()\nBusGoing out of screen and\ndestroy animation()",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    ColorType color\n    List of available Seats\n    Dictionary of <seat, customer>\n    Reference to busManager\n    CustomerAnimation TaskList\n\n- Functions\n    CustomerAssign(customer)\n    - Take a seat from available and save that seat with customer in dictionary  \n    - if available seat count is less then or equal to zero call RemoveThisBus()\n\nPlayCustomerAssignAnimation()\n    -make the customer set Destination\n    - save animation in a task list\n\n    OnTriggerEnter()\n    - trygetcomponent customer\n    - find customer in disctiory and set scale to zero then assign to seat position and scale up the customer \n    - also call RemoveThisCustomer(customer) of customer manager    \n\n    Remove This Bus()\n    - Call Remove bus of bus manager \n    - call UpdatebusPosition()\n\n    UpdateBusPosition()\n    - wait for all customer animation to complete in TaskList\n   \nBusMoving Forward()\nBusGoing out of screen and destroy animation()",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "kWMElc8jWcAGEmCHhF5t6",
      "type": "text",
      "x": 78.22068542750259,
      "y": 359.914360535558,
      "width": 314.160157,
      "height": 2600,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4",
      "roundness": {
        "type": 2
      },
      "seed": 1252761636,
      "version": 3840,
      "versionNonce": 1875888734,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736489805796,
      "link": null,
      "locked": false,
      "text": "- Variables\n    Reference to bus manager\n    Reference to\nCustomerManager\n    Reference to GridManager\n    Reference to People\nstand manager\n    list of prefab of all\ncolor customer\n    list of prefab of all\ncolor bus\n    prefab of gate\n    [sf] LevelData levelData\n\n    amount of Bus to spawn\n    amount of Gate to spawn\n    amount of Grids to Spawn\n\n    min-0,max-10 gridColumn\n    min-0,max-10 gridRow\n\n    OnGame Over event\n    OnGameWin Event\n    bool isGameCompleted\n\n- Functions\n    CelarScene()\n    - Run for loop on all\nthe lists first perfomr\ndokill on them and then\ndestroy them\n    - verify first if they\nhave count less then zero or\nnot then proceed\n    -after that call\ninintializLevel\n\n    InitializeLevel()\n    - Get total amount of\ngrids by column * raw\n    - assing amount of bus\nby total amount of grid/3\nand set gate amount to zero\n    - Call CreateGrid()\n\n    CreateGrid()\n- await updateGrids of\ngridManager\n    - call create Bus\n\n    CreateBus()\n        - Create buses and\nassign to spawnedBuses of\nBus Manager\n        - call\nfirstPositionAssign of bus\nManager\n-createCustomer()\n    \n    CreateCustomer()\n        - create temp list\nand instantiate 3 customer\nof same color as bus for\neach bus.\n        - create gates add\nto spawned gates of customer\nmanager\n        - Foreach gate get\nrandom number and assign\nthat number of customers to\nthat gate and disable all\nthe assigned customers\n        - then assign\nremaining customers to\ncustomer manager's spawned\ncustomer list\n        - call\nFirstPositionAssign of\ncustomer manager\n\nCheckGameOver and return\nfalse\n\n    CheckGameOver()\n    - check if all people\nstand filled and if any of\nthe standing  people color\nmatch to current bus\n    - if no stand space is\nleft and no match found then\ncall game over invoke and\nset isGameCompleted to true\n\n    CheckWinCondition()\n    - check if bus spawn\nlist and customer spawn list\nempty\n    - check if all\nanimations of customer and\nbus are finished\n    - check if all gates\nhave zero left customer \n    - if all conditions are\ntrue then invoke win",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    Reference to bus manager\n    Reference to CustomerManager\n    Reference to GridManager\n    Reference to People stand manager\n    list of prefab of all color customer\n    list of prefab of all color bus\n    prefab of gate\n    [sf] LevelData levelData\n\n    amount of Bus to spawn\n    amount of Gate to spawn\n    amount of Grids to Spawn\n\n    min-0,max-10 gridColumn\n    min-0,max-10 gridRow\n\n    OnGame Over event\n    OnGameWin Event\n    bool isGameCompleted\n\n- Functions\n    CelarScene()\n    - Run for loop on all the lists first perfomr dokill on them and then destroy them\n    - verify first if they have count less then zero or not then proceed\n    -after that call inintializLevel\n\n    InitializeLevel()\n    - Get total amount of grids by column * raw\n    - assing amount of bus by total amount of grid/3 and set gate amount to zero\n    - Call CreateGrid()\n\n    CreateGrid()\n- await updateGrids of gridManager\n    - call create Bus\n\n    CreateBus()\n        - Create buses and assign to spawnedBuses of Bus Manager\n        - call firstPositionAssign of bus Manager\n-createCustomer()\n    \n    CreateCustomer()\n        - create temp list and instantiate 3 customer of same color as bus for each bus.\n        - create gates add to spawned gates of customer manager\n        - Foreach gate get random number and assign that number of customers to that gate and disable all the assigned customers\n        - then assign remaining customers to customer manager's spawned customer list\n        - call FirstPositionAssign of customer manager\n\nCheckGameOver and return false\n\n    CheckGameOver()\n    - check if all people stand filled and if any of the standing  people color match to current bus\n    - if no stand space is left and no match found then call game over invoke and set isGameCompleted to true\n\n    CheckWinCondition()\n    - check if bus spawn list and customer spawn list empty\n    - check if all animations of customer and bus are finished\n    - check if all gates have zero left customer \n    - if all conditions are true then invoke win",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "5diQG50iR9IT2N5tZa2yY",
      "type": "text",
      "x": -287.132812,
      "y": 359.9296875,
      "width": 314.16015600000003,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4V",
      "roundness": {
        "type": 2
      },
      "seed": 1007418276,
      "version": 1170,
      "versionNonce": 1399131420,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402648748,
      "link": null,
      "locked": false,
      "text": "- red\n- blue\n- green\n- orange\n- white\n- purple\n- yellow",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- red\n- blue\n- green\n- orange\n- white\n- purple\n- yellow",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "JZkcQ12yZElgmJaVKgjc4",
      "type": "rectangle",
      "x": 1535.017578125,
      "y": 212.506103515625,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": {
        "type": 3
      },
      "seed": 1742006052,
      "version": 289,
      "versionNonce": 192467740,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "JTr-wzDsHfojNl3oUb6f7",
          "type": "text"
        }
      ],
      "updated": 1736399354220,
      "link": null,
      "locked": false
    },
    {
      "id": "JTr-wzDsHfojNl3oUb6f7",
      "type": "text",
      "x": 1630.4976806640625,
      "y": 248.035400390625,
      "width": 123.199951171875,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a8",
      "roundness": null,
      "seed": 1530732728,
      "version": 285,
      "versionNonce": 1868544420,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402118037,
      "link": null,
      "locked": false,
      "text": "Customer",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "JZkcQ12yZElgmJaVKgjc4",
      "originalText": "Customer",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "niUw917PFoqLDFI0k8Chk",
      "type": "text",
      "x": 1535.017578,
      "y": 359.9296882565516,
      "width": 314.16015600000014,
      "height": 2225,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a9",
      "roundness": {
        "type": 2
      },
      "seed": 309617316,
      "version": 3193,
      "versionNonce": 248498084,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402848775,
      "link": null,
      "locked": false,
      "text": "- Variables\n    ColorType\n    AIPath\n    Seeker\n    indicateRenderer\n    GameObject Obstacle\n    canReachDestination\n    OnStand\n- Functions\n    Start()\n    -aiPath.canMove = false;\n    -aiPath.destination =\nBusManager.Instance.defaultT\narget.position;  \n    -Call\nUpdateReachability()     \n\n\n    OnMouseDown()\n        - if\ncanReachDestination is false\nthen return else continue\n            - set\ncanReachDestination to false\n            - Call Check\nColor\n   \n    UpdateReachability\nTask()\n    - Logic for checking if\npath is available to\ndestination or not\n    - canReachDestination\nwill be updated here\n    - If canReachDestination\nis true call MakeAvailable\n    - else call\nMakeUnavailable\n\n    Task Set Destination\n(TargetPosition)\n        - GetPath from\nGridSystem\n        - await Follow path\nto the TargetPostion\n        - Return Task\nCompleted\n    \n    MakeAvailable()\n        -change emission\ncolor of indicateRenderer to\ngreen * 10\n\n    MakeUnavailable()\n        -change emission\ncolor of indicateRenderer to\nred * 10\n \n    CheckColor()\n        -check if the\ncurrent bus is same color as\nthis customer\n        -if yes then call\ncustomerAssign of the\ncurrent bus\n        - else call check\nfor available\npoepleStand(this, out stand)\nfrom stand manager and if it\nreturns true, set\nDestination to that stand \n        -call make\nunavailable\n        - Subscribe to\nnewBusArrived from Bus\nmanager \n\n  CheckIfNewBusIsSameColor()\n    -check if the current\nbus is same color \n    - if yes then call\ncustomer assing of the\ncurrent bus \n    - unsubscribe from\nnewBusArrived\n\n    GateSpawnAnimation(grid\nto spawn at)\n    - spawn aniamtion",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    ColorType\n    AIPath\n    Seeker\n    indicateRenderer\n    GameObject Obstacle\n    canReachDestination\n    OnStand\n- Functions\n    Start()\n    -aiPath.canMove = false;\n    -aiPath.destination = BusManager.Instance.defaultTarget.position;  \n    -Call UpdateReachability()     \n\n\n    OnMouseDown()\n        - if canReachDestination is false then return else continue\n            - set canReachDestination to false\n            - Call Check Color\n   \n    UpdateReachability Task()\n    - Logic for checking if path is available to destination or not\n    - canReachDestination will be updated here\n    - If canReachDestination is true call MakeAvailable\n    - else call MakeUnavailable\n\n    Task Set Destination  (TargetPosition)\n        - GetPath from GridSystem\n        - await Follow path to the TargetPostion\n        - Return Task Completed\n    \n    MakeAvailable()\n        -change emission color of indicateRenderer to green * 10\n\n    MakeUnavailable()\n        -change emission color of indicateRenderer to red * 10\n \n    CheckColor()\n        -check if the current bus is same color as this customer\n        -if yes then call customerAssign of the current bus\n        - else call check for available poepleStand(this, out stand) from stand manager and if it returns true, set Destination to that stand \n        -call make unavailable\n        - Subscribe to newBusArrived from Bus manager \n\n  CheckIfNewBusIsSameColor()\n    -check if the current bus is same color \n    - if yes then call customer assing of the current bus \n    - unsubscribe from newBusArrived\n\n    GateSpawnAnimation(grid to spawn at)\n    - spawn aniamtion",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "q1WqPQt0NQCECoNLQ-ty3",
      "type": "rectangle",
      "x": -653.6894536249999,
      "y": 215.847656,
      "width": 314.16015625,
      "height": 106.05859399999999,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aE",
      "roundness": {
        "type": 3
      },
      "seed": 1117285924,
      "version": 641,
      "versionNonce": 385921180,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "WNBOQ1cBNg7hb8LLrZ5mu",
          "type": "text"
        }
      ],
      "updated": 1736402401650,
      "link": null,
      "locked": false
    },
    {
      "id": "WNBOQ1cBNg7hb8LLrZ5mu",
      "type": "text",
      "x": -565.9093480341796,
      "y": 251.376953,
      "width": 138.59994506835938,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aF",
      "roundness": null,
      "seed": 1575564744,
      "version": 640,
      "versionNonce": 1968717084,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402401650,
      "link": null,
      "locked": false,
      "text": "LevelData",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "q1WqPQt0NQCECoNLQ-ty3",
      "originalText": "LevelData",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "15d_QoWOYJqFpXX8b0SPQ",
      "type": "text",
      "x": -653.689454,
      "y": 359.9296878828125,
      "width": 314.16015699999997,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aG",
      "roundness": {
        "type": 2
      },
      "seed": 2033125796,
      "version": 1402,
      "versionNonce": 1772843806,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736484463227,
      "link": null,
      "locked": false,
      "text": "- amount of people stand\n- amount of columns\n- amount of rows",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- amount of people stand\n- amount of columns\n- amount of rows",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "aQbSuMLZVQwVWXnEquUaK",
      "type": "rectangle",
      "x": 2245.2949223259743,
      "y": 213.96093785285558,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aL",
      "roundness": {
        "type": 3
      },
      "seed": 1342006428,
      "version": 959,
      "versionNonce": 1875674404,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "za6YLEKsNmIzSimPfaaTS",
          "type": "text"
        }
      ],
      "updated": 1736402606150,
      "link": null,
      "locked": false
    },
    {
      "id": "za6YLEKsNmIzSimPfaaTS",
      "type": "text",
      "x": 2263.775055382615,
      "y": 249.49023472785558,
      "width": 277.19989013671875,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aM",
      "roundness": null,
      "seed": 1148044068,
      "version": 940,
      "versionNonce": 902316196,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402606150,
      "link": null,
      "locked": false,
      "text": "PeopleStandManager",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "aQbSuMLZVQwVWXnEquUaK",
      "originalText": "PeopleStandManager",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "MI0H1f8Z29dWW2OZAsTEu",
      "type": "text",
      "x": 2245.294922,
      "y": 359.92968847904166,
      "width": 314.1601568259739,
      "height": 475,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aN",
      "roundness": {
        "type": 2
      },
      "seed": 1419669788,
      "version": 2438,
      "versionNonce": 1973551524,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736402616281,
      "link": null,
      "locked": false,
      "text": "- Variables\n    List of Spawned Stand\n    List of Occupied Stand\n\n- Functions\n    FirstPositionAssign()\n    \nCheckForAvailableStand(out\nstand)\n        - if spawnedStand\ncount is greater then zero\n        - then assign first\nstand in list to local stand\nvariable, remove it from\nspawned and assign to\noccupied and return true\n        - else set local\nstand to null and return\nfalse",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    List of Spawned Stand\n    List of Occupied Stand\n\n- Functions\n    FirstPositionAssign()\n    \nCheckForAvailableStand(out stand)\n        - if spawnedStand count is greater then zero\n        - then assign first stand in list to local stand variable, remove it from spawned and assign to occupied and return true\n        - else set local stand to null and return false",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "aDNXC6WU8GLhltkPJEEwg",
      "type": "rectangle",
      "x": -1161.647762892182,
      "y": 215.84765628543983,
      "width": 295.53540886897525,
      "height": 55.731929251009475,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "0ZjIfOyadeGkw8SjO5Zal"
      ],
      "frameId": null,
      "index": "aV",
      "roundness": {
        "type": 3
      },
      "seed": 297913116,
      "version": 1025,
      "versionNonce": 1042246208,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "LAtviJCGk2h5etdJy1pqz"
        }
      ],
      "updated": 1736404126161,
      "link": null,
      "locked": false
    },
    {
      "id": "LAtviJCGk2h5etdJy1pqz",
      "type": "text",
      "x": -1112.3740007184367,
      "y": 223.35970889863268,
      "width": 196.98788452148438,
      "height": 40.707824024623704,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "0ZjIfOyadeGkw8SjO5Zal"
      ],
      "frameId": null,
      "index": "aW",
      "roundness": null,
      "seed": 276274212,
      "version": 1202,
      "versionNonce": 1167284672,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736404126161,
      "link": null,
      "locked": false,
      "text": "Main Prompt",
      "fontSize": 32.56625921969896,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "aDNXC6WU8GLhltkPJEEwg",
      "originalText": "Main Prompt",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "VZtbHOXQWsWzfuw6XQxzo",
      "type": "text",
      "x": -1318.251046768806,
      "y": 321.90625041411977,
      "width": 608.7419768479886,
      "height": 524.2578918415103,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "0ZjIfOyadeGkw8SjO5Zal"
      ],
      "frameId": null,
      "index": "aX",
      "roundness": null,
      "seed": 2032403008,
      "version": 1194,
      "versionNonce": 1947660736,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736404148878,
      "link": null,
      "locked": false,
      "text": "- Act as professional prompt writer and help me\noptimize the below prompt\n    \"- I am working on a game called Bus jam and I\nam using Unity engine to create it\n    - I have written all the logic of all classes\nyou just need to write the code here \n- Use DOTween For animations\n    - I am using A* Pathfinding Project pro for path\nfinding\n    - Only write logic if you have the whole\ninformation otherwise you can ask me or tell me that\nlogic is not written here\n    - I will give you logics of classes one by one\nyou have to make sure you are adjusting the names of\nvariables and class as needed since at some place i\nwould have defined the class, function, variable\nrather writing the name \n    - if you do not understand anything or confused\nabout anything ask me first then proceed\"\nask me any questions or clarification you need.",
      "fontSize": 20.970315673660412,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Act as professional prompt writer and help me optimize the below prompt\n    \"- I am working on a game called Bus jam and I am using Unity engine to create it\n    - I have written all the logic of all classes you just need to write the code here \n- Use DOTween For animations\n    - I am using A* Pathfinding Project pro for path finding\n    - Only write logic if you have the whole information otherwise you can ask me or tell me that logic is not written here\n    - I will give you logics of classes one by one you have to make sure you are adjusting the names of variables and class as needed since at some place i would have defined the class, function, variable rather writing the name \n    - if you do not understand anything or confused about anything ask me first then proceed\"\nask me any questions or clarification you need.",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "k2ejwwXwHROW5bR4QVV5-",
      "type": "text",
      "x": -775.2435869690814,
      "y": 993.688358412793,
      "width": 422.3007646261656,
      "height": 450,
      "angle": 0.006039923212776799,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aY",
      "roundness": null,
      "seed": 410487360,
      "version": 1159,
      "versionNonce": 25839230,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736428965656,
      "link": null,
      "locked": false,
      "text": "I still need to think\nabout how to assign\npositions of\ncustomers and bus and\nPeopleStands\n\nAnd the main of all\nGrids how am i gonna\ngive and assign space\nto stand and wait",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "I still need to think about how to assign positions of customers and bus and PeopleStands\n\nAnd the main of all Grids how am i gonna give and assign space to stand and wait",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "9zXjJMLr78AsoxvClsscG",
      "type": "text",
      "x": -674.0702650984894,
      "y": 635.6611405893643,
      "width": 234.49555123459967,
      "height": 106.93463945806366,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aZ",
      "roundness": null,
      "seed": 1574216128,
      "version": 188,
      "versionNonce": 22403648,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736406862162,
      "link": null,
      "locked": false,
      "text": "Karan bhai told me\nto just focus on\ncreating grids and\nfill them totally",
      "fontSize": 21.386927891612736,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Karan bhai told me to just focus on creating grids and fill them totally",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "KugWfStm_X6Ax24_vpfJZ",
      "type": "text",
      "x": -675.7804751229497,
      "y": 761.3912329668386,
      "width": 223.30090636764976,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aa",
      "roundness": null,
      "seed": 1469624768,
      "version": 134,
      "versionNonce": 1368283712,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736406938951,
      "link": null,
      "locked": false,
      "text": "Sandip sir\ntold me to\nspawn bus\ndepending on\ngrid amount",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Sandip sir told me to spawn bus depending on grid amount",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "7eOS3Z1Bw0raIZlAX0jJb",
      "type": "rectangle",
      "x": 2612.5662684398258,
      "y": 212.45776021355596,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ab",
      "roundness": {
        "type": 3
      },
      "seed": 87733538,
      "version": 373,
      "versionNonce": 1057815938,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "Rgn4eDLUq-MuWCNjMXHSH"
        }
      ],
      "updated": 1736489127230,
      "link": null,
      "locked": false
    },
    {
      "id": "Rgn4eDLUq-MuWCNjMXHSH",
      "type": "text",
      "x": 2677.2463831859195,
      "y": 247.98705708855596,
      "width": 184.7999267578125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ac",
      "roundness": null,
      "seed": 1210826978,
      "version": 352,
      "versionNonce": 1114444702,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736489127230,
      "link": null,
      "locked": false,
      "text": "Grid Manager",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "7eOS3Z1Bw0raIZlAX0jJb",
      "originalText": "Grid Manager",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6BPuZm3CwrCCoRsKLox5N",
      "type": "rectangle",
      "x": 2979.8376144398253,
      "y": 214.687500213556,
      "width": 314.16015625,
      "height": 106.05859375,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "acG",
      "roundness": {
        "type": 3
      },
      "seed": 1896148958,
      "version": 449,
      "versionNonce": 1783762946,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "1m1uaoNSP57sFt01iR0Ti",
          "type": "text"
        }
      ],
      "updated": 1736489131020,
      "link": null,
      "locked": false
    },
    {
      "id": "1m1uaoNSP57sFt01iR0Ti",
      "type": "text",
      "x": 3106.1177047718566,
      "y": 250.216797088556,
      "width": 61.5999755859375,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "acV",
      "roundness": null,
      "seed": 1105790210,
      "version": 434,
      "versionNonce": 221926786,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736489135584,
      "link": null,
      "locked": false,
      "text": "Grid",
      "fontSize": 28,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "6BPuZm3CwrCCoRsKLox5N",
      "originalText": "Grid",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "mvdKLcESrD_0eRGPLIuqS",
      "type": "text",
      "x": 2612.5662684398258,
      "y": 357.8816062860535,
      "width": 314.16015675000006,
      "height": 800,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ad",
      "roundness": {
        "type": 2
      },
      "seed": 1753568418,
      "version": 1759,
      "versionNonce": 1436744158,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736484904503,
      "link": null,
      "locked": false,
      "text": "- Variables\n    [Min(1), Max(50)] int\ncolumns = 3;\n    [Min(1), Max(50)] int\nrows = 3;     \n    Transform gridPrefab;\n    float offset = 1.1f;\n     Transform spawnPoint;  \n\n    private List<Transform>\nallGrids = new(); \n    public List<Transform>\nvisibleGrids = new();  \n\n- Functions\n    \n    UpdateGrids()\n    -Logic for updating\ngrids\n    \n    GetGridOffset()\n    -Logic for offset\n\n    UpdateGridsList(int\namountOfGridsNeeded)\n\n    DisableExtraGrids(int\namountOfGridsNeeded)\n\n    ClearGrids()\n    - destroy all grids and\nclear all list",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Variables\n    [Min(1), Max(50)] int columns = 3;\n    [Min(1), Max(50)] int rows = 3;     \n    Transform gridPrefab;\n    float offset = 1.1f;\n     Transform spawnPoint;     \n\n    private List<Transform> allGrids = new(); \n    public List<Transform> visibleGrids = new();  \n\n- Functions\n    \n    UpdateGrids()\n    -Logic for updating grids\n    \n    GetGridOffset()\n    -Logic for offset\n\n    UpdateGridsList(int amountOfGridsNeeded)\n\n    DisableExtraGrids(int amountOfGridsNeeded)\n\n    ClearGrids()\n    - destroy all grids and clear all list",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "tLxPl5HOLNKc2AmmK7gT2",
      "type": "rectangle",
      "x": -1371.858863949221,
      "y": 944.7074745450734,
      "width": 458.6626549370709,
      "height": 97.71985502406096,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ae",
      "roundness": {
        "type": 3
      },
      "seed": 1102331202,
      "version": 48,
      "versionNonce": 1159868098,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "j0YebFyjKokMBP9q0qXmO"
        }
      ],
      "updated": 1736484217514,
      "link": null,
      "locked": false
    },
    {
      "id": "j0YebFyjKokMBP9q0qXmO",
      "type": "text",
      "x": -1182.127512066623,
      "y": 971.0674020571039,
      "width": 79.199951171875,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "af",
      "roundness": null,
      "seed": 1269402142,
      "version": 8,
      "versionNonce": 674282754,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736484221066,
      "link": null,
      "locked": false,
      "text": "TODO",
      "fontSize": 36,
      "fontFamily": 8,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "tLxPl5HOLNKc2AmmK7gT2",
      "originalText": "TODO",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "D4CFTQGHn_QSWpnuV9ifa",
      "type": "text",
      "x": -1356.550315739118,
      "y": 1073.798584366622,
      "width": 432.92591675145616,
      "height": 200,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ag",
      "roundness": null,
      "seed": 263003294,
      "version": 345,
      "versionNonce": 1893357854,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736484316562,
      "link": null,
      "locked": false,
      "text": "- create generic instance class\n- create Prefabs\n- modify game manager to spawn bus\naccording to grid\n- modify customer manager to assign\ncustomers on grid positions\n- add reference of gridManager in game\nmanager",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- create generic instance class\n- create Prefabs\n- modify game manager to spawn bus according to grid\n- modify customer manager to assign customers on grid positions\n- add reference of gridManager in game manager",
      "autoResize": false,
      "lineHeight": 1.25
    },
    {
      "id": "9Sni6n88ybPYdQ1wQ0xWe",
      "type": "line",
      "x": -1338.3152289185998,
      "y": 1237.496472050093,
      "width": 419.863043989061,
      "height": 0.6735509483150963,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ah",
      "roundness": {
        "type": 2
      },
      "seed": 1250196958,
      "version": 41,
      "versionNonce": 877336350,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485010623,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          419.863043989061,
          -0.6735509483150963
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "lLm5GFKsa3S-DCvgAyUJn",
      "type": "line",
      "x": -1361.1915318523058,
      "y": 1264.061600643742,
      "width": 81.00409876342474,
      "height": 1.2179755490255957,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ai",
      "roundness": {
        "type": 2
      },
      "seed": 257327966,
      "version": 52,
      "versionNonce": 670632414,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485015421,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          81.00409876342474,
          -1.2179755490255957
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "ZGhn2Zp5JZlv9PFGDyT97",
      "type": "line",
      "x": -1341.7074129691814,
      "y": 1136.7883906224877,
      "width": 363.96878498277044,
      "height": 1.5913949866926487,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aj",
      "roundness": {
        "type": 2
      },
      "seed": 641211934,
      "version": 93,
      "versionNonce": 2072639298,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485023021,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          363.96878498277044,
          1.5913949866926487
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "VxPGxZhLZLCpoSNaOPnhF",
      "type": "line",
      "x": -1366.6218182542657,
      "y": 1161.9819880105003,
      "width": 213.05498364604364,
      "height": 1.9717942269326159,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ak",
      "roundness": {
        "type": 2
      },
      "seed": 1401798402,
      "version": 35,
      "versionNonce": 1402780254,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485025554,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          213.05498364604364,
          -1.9717942269326159
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "0Xhr5WGJ7H1H9jgV_gBeH",
      "type": "line",
      "x": -1339.5670223358143,
      "y": 1187.9843528405363,
      "width": 370.13607997469444,
      "height": 2.0847775171705507,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "al",
      "roundness": {
        "type": 2
      },
      "seed": 2099044574,
      "version": 66,
      "versionNonce": 1032264990,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485352884,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          370.13607997469444,
          -2.0847775171705507
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "tlkGCMdEl4RTMrMv-8zmI",
      "type": "line",
      "x": -1358.379970523546,
      "y": 1213.343449852674,
      "width": 307.8398781501437,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "am",
      "roundness": {
        "type": 2
      },
      "seed": 1596049758,
      "version": 40,
      "versionNonce": 550219358,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736485357351,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          307.8398781501437,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "hEPhDE73iFORMl8frQlgy",
      "type": "line",
      "x": -1339.0333403232232,
      "y": 1085.233477076241,
      "width": 331.3087418270411,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "an",
      "roundness": {
        "type": 2
      },
      "seed": 2082885186,
      "version": 89,
      "versionNonce": 2122291678,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736488162436,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          331.3087418270411,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "y75X3p1l1BraMdgeHs1LQ",
      "type": "line",
      "x": -1339.482895122008,
      "y": 1112.0122208213825,
      "width": 163.8666676201085,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ao",
      "roundness": {
        "type": 2
      },
      "seed": 225226270,
      "version": 23,
      "versionNonce": 1785448450,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736488167235,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          163.8666676201085,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "KbqizVGWZMT3R_QUMD9Nx",
      "type": "text",
      "x": 2996.228977412191,
      "y": 363.24409105547267,
      "width": 286.4012526968081,
      "height": 300,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#fefeff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ap",
      "roundness": null,
      "seed": 674502622,
      "version": 308,
      "versionNonce": 1013886850,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1736489260164,
      "link": null,
      "locked": false,
      "text": "Varibles\n    transform walkable\n    transform nonWalkable\n    transform Gate\n\nfunctions\n    start\n    - call\nactivateWalkable\n    -ActivateGate\n    -ActivateWalkable\n    -ActivateNonWalkable",
      "fontSize": 20,
      "fontFamily": 8,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Varibles\n    transform walkable\n    transform nonWalkable\n    transform Gate\n\nfunctions\n    start\n    - call activateWalkable\n    -ActivateGate\n    -ActivateWalkable\n    -ActivateNonWalkable",
      "autoResize": false,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}